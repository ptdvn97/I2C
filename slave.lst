CCS PCM C Compiler, Version 5.025, 5967               21-Nov-17 21:07

               Filename:   C:\Users\Dung Phan\Documents\I2C\slave.lst

               ROM used:   132 words (2%)
                           Largest free fragment is 2048
               RAM used:   13 (4%) at main() level
                           16 (4%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   05E
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  MOVLW  8C
0018:  MOVWF  04
0019:  BTFSS  00.3
001A:  GOTO   01D
001B:  BTFSC  0C.3
001C:  GOTO   02E
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   20,W
0028:  MOVWF  0A
0029:  SWAPF  21,W
002A:  MOVWF  03
002B:  SWAPF  7F,F
002C:  SWAPF  7F,W
002D:  RETFIE
002E:  BCF    0A.3
002F:  BCF    0A.4
0030:  GOTO   031
.................... #include <slave.h> 
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #device ADC=10 
.................... #use delay(crystal=20000000) 
*
0041:  MOVLW  2A
0042:  MOVWF  04
0043:  BCF    03.7
0044:  MOVF   00,W
0045:  BTFSC  03.2
0046:  GOTO   054
0047:  MOVLW  06
0048:  MOVWF  78
0049:  CLRF   77
004A:  DECFSZ 77,F
004B:  GOTO   04A
004C:  DECFSZ 78,F
004D:  GOTO   049
004E:  MOVLW  7B
004F:  MOVWF  77
0050:  DECFSZ 77,F
0051:  GOTO   050
0052:  DECFSZ 00,F
0053:  GOTO   047
.................... #use i2c(Slave,Fast,sda=PIN_C4,scl=PIN_C3,address=0x10) 
....................  
....................  
....................  
....................  
....................  
....................  
.................... void main() 
*
005E:  MOVF   03,W
005F:  ANDLW  1F
0060:  MOVWF  03
0061:  MOVLW  FF
0062:  MOVWF  27
0063:  BSF    27.3
0064:  MOVF   27,W
0065:  BSF    03.5
0066:  MOVWF  07
0067:  BCF    03.5
0068:  BSF    27.4
0069:  MOVF   27,W
006A:  BSF    03.5
006B:  MOVWF  07
006C:  MOVLW  10
006D:  MOVWF  13
006E:  MOVLW  36
006F:  BCF    03.5
0070:  MOVWF  14
0071:  BSF    03.5
0072:  BSF    11.0
0073:  BSF    1F.0
0074:  BSF    1F.1
0075:  BSF    1F.2
0076:  BCF    1F.3
0077:  MOVLW  07
0078:  MOVWF  1C
0079:  BCF    03.7
.................... { 
....................    output_d(0x00); 
007A:  CLRF   08
007B:  BCF    03.5
007C:  CLRF   08
....................    enable_interrupts(INT_SSP); 
007D:  BSF    03.5
007E:  BSF    0C.3
....................    enable_interrupts(GLOBAL); 
007F:  MOVLW  C0
0080:  BCF    03.5
0081:  IORWF  0B,F
....................    while(TRUE) 
....................    {} 
0082:  GOTO   082
....................  
.................... } 
....................  
....................  
.................... #INT_SSP 
.................... void ngatSSP() 
0083:  SLEEP
.................... { 
....................    int a; 
....................    a = i2c_read(); 
*
0031:  BCF    14.6
0032:  BTFSS  0C.3
0033:  GOTO   032
0034:  MOVF   13,W
0035:  BSF    14.4
0036:  MOVWF  28
....................    if(a==1) 
0037:  DECFSZ 28,W
0038:  GOTO   05A
....................    { 
....................       output_bit(PIN_D0,1); 
0039:  BSF    08.0
003A:  BSF    03.5
003B:  BCF    08.0
....................       delay_ms(1000); 
003C:  MOVLW  04
003D:  BCF    03.5
003E:  MOVWF  29
003F:  MOVLW  FA
0040:  MOVWF  2A
*
0054:  DECFSZ 29,F
0055:  GOTO   03F
....................       output_bit(PIN_D0,0); 
0056:  BCF    08.0
0057:  BSF    03.5
0058:  BCF    08.0
0059:  BCF    03.5
....................    } 
....................     
005A:  BCF    0C.3
005B:  BCF    0A.3
005C:  BCF    0A.4
005D:  GOTO   01D
.................... } 

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
